services:
  db:
    image: postgres:14-alpine
    restart: on-failure
    expose:
      - 5432
    volumes:
      - ./pgdata_prod:/var/lib/postgresql/data
    env_file:
      - ./env/.env.prod

  backend:
    env_file:
      - ./env/.env.prod
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    expose:
      - 8000
    volumes:
      - django_static_volume:/lotus/staticfiles
    command:  sh -c "./scripts/start_backend.prod.sh"
    depends_on:
      - db
      - redis
    restart: on-failure

  frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    env_file:
      - ./env/.env.prod
    stdin_open: true
    ports:
      - 80:80
    volumes:
      - django_static_volume:/app/backend/server/django_staticfiles
    depends_on:
      - backend

  redis:
    image: redis:7-alpine
    command: redis-server
    env_file:
      - ./env/.env.prod

  celery:
    env_file:
      - ./env/.env.prod
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    command: celery -A lotus worker -l info
    depends_on:
      - redis
      - backend
    restart: on-failure

  celery-beat:
    env_file:
      - ./env/.env.prod
    restart: on-failure
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    command: celery -A lotus beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - celery
      - backend
      - redis

volumes:
  pgdata_prod:
  django_static_volume:
