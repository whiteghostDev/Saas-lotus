# Generated by Django 4.0.5 on 2023-01-05 03:20

from decimal import Decimal

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("metering_billing", "0137_historicalmetric_mat_views_provisioned_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="customer",
            name="tax_rate",
            field=models.DecimalField(
                decimal_places=4,
                help_text="Tax rate as percentage. For example, 10.5 for 10.5%",
                max_digits=7,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(Decimal("0")),
                    django.core.validators.MaxValueValidator(
                        Decimal("999.999900000000025102053768932819366455078125")
                    ),
                ],
            ),
        ),
        migrations.AddField(
            model_name="historicalcustomer",
            name="tax_rate",
            field=models.DecimalField(
                decimal_places=4,
                help_text="Tax rate as percentage. For example, 10.5 for 10.5%",
                max_digits=7,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(Decimal("0")),
                    django.core.validators.MaxValueValidator(
                        Decimal("999.999900000000025102053768932819366455078125")
                    ),
                ],
            ),
        ),
        migrations.AddField(
            model_name="historicalorganization",
            name="tax_rate",
            field=models.DecimalField(
                decimal_places=4,
                help_text="Tax rate as percentage. For example, 10.5 for 10.5%",
                max_digits=7,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(Decimal("0")),
                    django.core.validators.MaxValueValidator(
                        Decimal("999.999900000000025102053768932819366455078125")
                    ),
                ],
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="tax_rate",
            field=models.DecimalField(
                decimal_places=4,
                help_text="Tax rate as percentage. For example, 10.5 for 10.5%",
                max_digits=7,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(Decimal("0")),
                    django.core.validators.MaxValueValidator(
                        Decimal("999.999900000000025102053768932819366455078125")
                    ),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="invoicelineitem",
            name="chargeable_item_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("usage_charge", "Usage Charge"),
                    ("recurring_charge", "Recurring Charge"),
                    ("one_time_charge", "One Time Charge"),
                    ("plan_adjustment", "Plan Adjustment"),
                    ("customer_adjustment", "Customer Adjustment"),
                    ("tax", "Tax"),
                ],
                max_length=40,
                null=True,
            ),
        ),
    ]
