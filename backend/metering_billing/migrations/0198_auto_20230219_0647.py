# Generated by Django 4.0.5 on 2023-02-19 06:47

from django.db import migrations


def refresh_mat_views(apps, schema_editor):
    Metric = apps.get_model("metering_billing", "Metric")
    from metering_billing.aggregation.billable_metrics import METRIC_HANDLER_MAP

    for metric in Metric.objects.all():
        handler = METRIC_HANDLER_MAP[metric.metric_type]
        handler.archive_metric(metric)
        metric.mat_views_provisioned = False
        metric.save(just_deleted_mat_views=True)

        ## INITADMIN WILL TAKE CARE OF REFRESHING THE VIEWS


class Migration(migrations.Migration):
    dependencies = [
        ("metering_billing", "0197_trigger_on_customers"),
    ]

    operations = [
        migrations.RunPython(refresh_mat_views, reverse_code=migrations.RunPython.noop),
        migrations.RunSQL(
            """
            BEGIN;

            -- Modify data types and drop column
            ALTER TABLE metering_billing_usageevent ALTER COLUMN cust_id TYPE TEXT;
            ALTER TABLE metering_billing_usageevent ALTER COLUMN event_name TYPE TEXT;
            ALTER TABLE metering_billing_usageevent ALTER COLUMN idempotency_id TYPE TEXT;
            ALTER TABLE metering_billing_usageevent DROP COLUMN customer_id;

            COMMIT;
            """,
            reverse_sql="""
            BEGIN;

            -- Add column and modify data types
            ALTER TABLE metering_billing_usageevent ADD COLUMN customer_id bigint;
            ALTER TABLE metering_billing_usageevent ALTER COLUMN idempotency_id TYPE varchar(255);
            ALTER TABLE metering_billing_usageevent ALTER COLUMN event_name TYPE varchar(100);
            ALTER TABLE metering_billing_usageevent ALTER COLUMN cust_id TYPE varchar(50);

            COMMIT;
            """,
        ),
    ]
