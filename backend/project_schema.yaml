openapi: 3.0.3
info:
  title: Lotus API
  version: 0.0.1
  description: Lotus is an open-core pricing and billing engine. We enable API companies
    to automate and optimize their custom usage-based pricing for any metric.
paths:
  /api/actions/:
    get:
      operationId: actions_list
      description: API endpoint that allows events to be viewed.
      parameters:
      - name: c
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - actions
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionList'
          description: ''
  /api/backtests/:
    get:
      operationId: backtests_list
      description: A simple ViewSet for viewing and editing Backtests.
      tags:
      - backtests
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BacktestSummary'
          description: ''
    post:
      operationId: backtests_create
      description: A simple ViewSet for viewing and editing Backtests.
      tags:
      - backtests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BacktestCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BacktestCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BacktestCreate'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BacktestCreate'
          description: ''
  /api/backtests/{backtest_id}/:
    get:
      operationId: backtests_retrieve
      description: A simple ViewSet for viewing and editing Backtests.
      parameters:
      - in: path
        name: backtest_id
        schema:
          type: string
        required: true
      tags:
      - backtests
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BacktestDetail'
          description: ''
  /api/balance_adjustments/:
    get:
      operationId: balance_adjustments_list
      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.
      parameters:
      - in: query
        name: customer_id
        schema:
          type: string
          minLength: 1
        required: true
      tags:
      - balance_adjustments
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerBalanceAdjustment'
          description: ''
    post:
      operationId: balance_adjustments_create
      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.
      tags:
      - balance_adjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBalanceAdjustment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerBalanceAdjustment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerBalanceAdjustment'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBalanceAdjustment'
          description: ''
  /api/balance_adjustments/{adjustment_id}/:
    delete:
      operationId: balance_adjustments_destroy
      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.
      parameters:
      - in: path
        name: adjustment_id
        schema:
          type: string
        required: true
      tags:
      - balance_adjustments
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/batch_create_customers/:
    post:
      operationId: batch_create_customers_create
      tags:
      - batch_create_customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBatchCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerBatchCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerBatchCreateRequest'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBatchCreateSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBatchCreateFailure'
          description: ''
  /api/cost_analysis/:
    get:
      operationId: cost_analysis_retrieve
      description: Returns the revenue for an organization in a given time period.
      parameters:
      - in: query
        name: customer_id
        schema:
          type: string
          minLength: 1
        required: true
      - in: query
        name: end_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: start_date
        schema:
          type: string
          format: date
        required: true
      tags:
      - cost_analysis
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostAnalysis'
          description: ''
  /api/customer_access/:
    get:
      operationId: customer_access_retrieve
      parameters:
      - in: query
        name: customer_id
        schema:
          type: string
          minLength: 1
        required: true
      - in: query
        name: event_name
        schema:
          type: string
          minLength: 1
      - in: query
        name: feature_name
        schema:
          type: string
          minLength: 1
      tags:
      - customer_access
      security:
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerAccessSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerAccessFailure'
          description: ''
  /api/customer_summary/:
    get:
      operationId: customer_summary_list
      description: Get the current settings for the organization.
      tags:
      - customer_summary
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerSummary'
          description: ''
  /api/customer_totals/:
    get:
      operationId: customer_totals_list
      description: Return current usage for a customer during a given billing period.
      tags:
      - customer_totals
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerWithRevenue'
          description: ''
  /api/customers/:
    get:
      operationId: customers_list
      description: A simple ViewSet for viewing and editing Customers.
      tags:
      - customers
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: customers_create
      description: A simple ViewSet for viewing and editing Customers.
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/customers/{customer_id}/:
    get:
      operationId: customers_retrieve
      description: A simple ViewSet for viewing and editing Customers.
      parameters:
      - in: path
        name: customer_id
        schema:
          type: string
        required: true
      tags:
      - customers
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetail'
          description: ''
    patch:
      operationId: customers_partial_update
      description: A simple ViewSet for viewing and editing Customers.
      parameters:
      - in: path
        name: customer_id
        schema:
          type: string
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerUpdate'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerUpdate'
          description: ''
  /api/demo_register/:
    post:
      operationId: demo_register_create
      tags:
      - demo_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DemoRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DemoRegistration'
        required: true
      security:
      - basicAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoRegistrationSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoRegistrationFailure'
          description: ''
  /api/draft_invoice/:
    get:
      operationId: draft_invoice_list
      description: Pagination-enabled endpoint for retrieving an organization's event
        stream.
      parameters:
      - in: query
        name: customer_id
        schema:
          type: string
          minLength: 1
        required: true
      tags:
      - draft_invoice
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DraftInvoice'
          description: ''
  /api/events/:
    get:
      operationId: events_list
      description: API endpoint that allows events to be viewed.
      parameters:
      - name: c
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - events
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
  /api/experimental_to_active/:
    post:
      operationId: experimental_to_active_create
      tags:
      - experimental_to_active
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentalToActiveRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExperimentalToActiveRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExperimentalToActiveRequest'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentalToActiveSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentalToActiveFailure'
          description: ''
  /api/external_plan_links/:
    post:
      operationId: external_plan_links_create
      description: A simple ViewSet for viewing and editing ExternalPlanLink.
      tags:
      - external_plan_links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalPlanLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExternalPlanLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExternalPlanLink'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalPlanLink'
          description: ''
  /api/external_plan_links/{external_plan_id}/:
    delete:
      operationId: external_plan_links_destroy
      description: A simple ViewSet for viewing and editing ExternalPlanLink.
      parameters:
      - in: path
        name: external_plan_id
        schema:
          type: string
        required: true
      - in: query
        name: source
        schema:
          enum:
          - stripe
          type: string
          minLength: 1
        required: true
      tags:
      - external_plan_links
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '204':
          description: No response body
  /api/features/:
    get:
      operationId: features_list
      description: A simple ViewSet for viewing and editing Features.
      tags:
      - features
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
          description: ''
    post:
      operationId: features_create
      description: A simple ViewSet for viewing and editing Features.
      tags:
      - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Feature'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Feature'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /api/features/{id}/:
    get:
      operationId: features_retrieve
      description: A simple ViewSet for viewing and editing Features.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feature.
        required: true
      tags:
      - features
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /api/import_customers/:
    post:
      operationId: import_customers_create
      tags:
      - import_customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportCustomersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImportCustomersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportCustomersRequest'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCustomerSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportCustomerFailure'
          description: ''
  /api/import_payment_objects/:
    post:
      operationId: import_payment_objects_create
      tags:
      - import_payment_objects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportPaymentObjectsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImportPaymentObjectsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportPaymentObjectsRequest'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPaymentObjectSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPaymentObjectFailure'
          description: ''
  /api/invoices/:
    get:
      operationId: invoices_list
      description: A simple ViewSet for viewing and editing Invoices.
      parameters:
      - in: query
        name: customer_id
        schema:
          type: string
          minLength: 1
      - in: query
        name: payment_status
        schema:
          enum:
          - paid
          - unpaid
          type: string
          minLength: 1
      tags:
      - invoices
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
          description: ''
  /api/invoices/{invoice_id}/:
    get:
      operationId: invoices_retrieve
      description: A simple ViewSet for viewing and editing Invoices.
      parameters:
      - in: path
        name: invoice_id
        schema:
          type: string
        required: true
      tags:
      - invoices
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    patch:
      operationId: invoices_partial_update
      description: A simple ViewSet for viewing and editing Invoices.
      parameters:
      - in: path
        name: invoice_id
        schema:
          type: string
        required: true
      tags:
      - invoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceUpdate'
          description: ''
  /api/login/:
    post:
      operationId: login_create
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - basicAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginFailure'
          description: ''
  /api/logout/:
    post:
      operationId: logout_create
      tags:
      - logout
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/metrics/:
    get:
      operationId: metrics_list
      description: A simple ViewSet for viewing and editing Billable Metrics.
      tags:
      - metrics
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metric'
          description: ''
    post:
      operationId: metrics_create
      description: A simple ViewSet for viewing and editing Billable Metrics.
      tags:
      - metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metric'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Metric'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Metric'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: ''
  /api/metrics/{metric_id}/:
    get:
      operationId: metrics_retrieve
      description: A simple ViewSet for viewing and editing Billable Metrics.
      parameters:
      - in: path
        name: metric_id
        schema:
          type: string
        required: true
      tags:
      - metrics
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: ''
    patch:
      operationId: metrics_partial_update
      description: A simple ViewSet for viewing and editing Billable Metrics.
      parameters:
      - in: path
        name: metric_id
        schema:
          type: string
        required: true
      tags:
      - metrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMetricUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMetricUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMetricUpdate'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricUpdate'
          description: ''
  /api/new_api_key/:
    get:
      operationId: new_api_key_retrieve
      description: Revokes the current API key and returns a new one.
      tags:
      - new_api_key
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyCreateSuccess'
          description: ''
  /api/organization/invite/:
    post:
      operationId: organization_invite_create
      tags:
      - organization
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          description: No response body
  /api/organization_settings/:
    get:
      operationId: organization_settings_list
      description: A simple ViewSet for viewing and editing OrganizationSettings.
      tags:
      - organization_settings
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationSetting'
          description: ''
  /api/organization_settings/{setting_id}/:
    get:
      operationId: organization_settings_retrieve
      description: A simple ViewSet for viewing and editing OrganizationSettings.
      parameters:
      - in: path
        name: setting_id
        schema:
          type: string
        required: true
      tags:
      - organization_settings
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSetting'
          description: ''
    patch:
      operationId: organization_settings_partial_update
      description: A simple ViewSet for viewing and editing OrganizationSettings.
      parameters:
      - in: path
        name: setting_id
        schema:
          type: string
        required: true
      tags:
      - organization_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationSetting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationSetting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationSetting'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSetting'
          description: ''
  /api/organizations/:
    get:
      operationId: organizations_list
      description: A simple ViewSet for viewing and editing OrganizationSettings.
      tags:
      - organizations
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
          description: ''
  /api/organizations/{organization_id}/:
    patch:
      operationId: organizations_partial_update
      description: A simple ViewSet for viewing and editing OrganizationSettings.
      parameters:
      - in: path
        name: organization_id
        schema:
          type: string
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationUpdate'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUpdate'
          description: ''
  /api/payment_providers/:
    get:
      operationId: payment_providers_list
      tags:
      - payment_providers
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SinglePaymentProvider'
          description: ''
    post:
      operationId: payment_providers_create
      tags:
      - payment_providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProviderPostRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentProviderPostRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentProviderPostRequest'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProviderPostResponse'
          description: ''
  /api/period_metric_revenue/:
    get:
      operationId: period_metric_revenue_retrieve
      description: Returns the revenue for an organization in a given time period.
      parameters:
      - in: query
        name: period_1_end_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: period_1_start_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: period_2_end_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: period_2_start_date
        schema:
          type: string
          format: date
        required: true
      tags:
      - period_metric_revenue
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodMetricRevenueResponse'
          description: ''
  /api/period_metric_usage/:
    get:
      operationId: period_metric_usage_retrieve
      description: Return current usage for a customer during a given billing period.
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: start_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: top_n_customers
        schema:
          type: integer
      tags:
      - period_metric_usage
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodMetricUsageResponse'
          description: ''
  /api/period_subscriptions/:
    get:
      operationId: period_subscriptions_retrieve
      parameters:
      - in: query
        name: period_1_end_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: period_1_start_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: period_2_end_date
        schema:
          type: string
          format: date
        required: true
      - in: query
        name: period_2_start_date
        schema:
          type: string
          format: date
        required: true
      tags:
      - period_subscriptions
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodSubscriptionsResponse'
          description: ''
  /api/plan_versions/:
    post:
      operationId: plan_versions_create
      description: A simple ViewSet for viewing and editing PlanVersions.
      tags:
      - plan_versions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PlanVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlanVersion'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanVersion'
          description: ''
  /api/plan_versions/{version_id}/:
    patch:
      operationId: plan_versions_partial_update
      description: A simple ViewSet for viewing and editing PlanVersions.
      parameters:
      - in: path
        name: version_id
        schema:
          type: string
        required: true
      tags:
      - plan_versions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanVersionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlanVersionUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlanVersionUpdate'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanVersionUpdate'
          description: ''
  /api/plans/:
    get:
      operationId: plans_list
      description: A simple ViewSet for viewing and editing Products.
      tags:
      - plans
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
          description: ''
    post:
      operationId: plans_create
      description: A simple ViewSet for viewing and editing Products.
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Plan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Plan'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /api/plans/{plan_id}/:
    get:
      operationId: plans_retrieve
      description: A simple ViewSet for viewing and editing Products.
      parameters:
      - in: path
        name: plan_id
        schema:
          type: string
        required: true
      tags:
      - plans
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanDetail'
          description: ''
    patch:
      operationId: plans_partial_update
      description: A simple ViewSet for viewing and editing Products.
      parameters:
      - in: path
        name: plan_id
        schema:
          type: string
        required: true
      tags:
      - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlanUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlanUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlanUpdate'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanUpdate'
          description: ''
  /api/plans_by_customer/:
    get:
      operationId: plans_by_customer_retrieve
      tags:
      - plans_by_customer
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansByNumCustomers'
          description: ''
  /api/pricing_units/:
    get:
      operationId: pricing_units_list
      description: A simple ViewSet for viewing and editing PricingUnits.
      tags:
      - pricing_units
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PricingUnit'
          description: ''
    post:
      operationId: pricing_units_create
      description: A simple ViewSet for viewing and editing PricingUnits.
      tags:
      - pricing_units
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PricingUnit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PricingUnit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PricingUnit'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingUnit'
          description: ''
  /api/products/:
    get:
      operationId: products_list
      description: A simple ViewSet for viewing and editing Products.
      tags:
      - products
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: products_create
      description: A simple ViewSet for viewing and editing Products.
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{product_id}/:
    get:
      operationId: products_retrieve
      description: A simple ViewSet for viewing and editing Products.
      parameters:
      - in: path
        name: product_id
        schema:
          type: string
        required: true
      tags:
      - products
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - basicAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationFailure'
          description: ''
  /api/session/:
    get:
      operationId: session_retrieve
      tags:
      - session
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          description: No response body
  /api/subscriptions/:
    get:
      operationId: subscriptions_list
      description: A simple ViewSet for viewing and editing Subscriptions.
      tags:
      - subscriptions
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
          description: ''
    post:
      operationId: subscriptions_create
      description: A simple ViewSet for viewing and editing Subscriptions.
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/subscriptions/{subscription_id}/:
    get:
      operationId: subscriptions_retrieve
      description: A simple ViewSet for viewing and editing Subscriptions.
      parameters:
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - subscriptions
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDetail'
          description: ''
    patch:
      operationId: subscriptions_partial_update
      description: A simple ViewSet for viewing and editing Subscriptions.
      parameters:
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionUpdate'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionUpdate'
          description: ''
  /api/track/:
    post:
      operationId: track_create
      tags:
      - track
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchEvent'
        required: true
      security:
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackEventSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackEventFailure'
          description: ''
  /api/transfer_subscriptions/:
    post:
      operationId: transfer_subscriptions_create
      tags:
      - transfer_subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferSubscriptionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransferSubscriptionsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransferSubscriptionsRequest'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferSubscriptionsSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferSubscriptionsFailure'
          description: ''
  /api/user/password/reset/:
    post:
      operationId: user_password_reset_create
      description: Verifies the token and resets the password.
      tags:
      - user
      security:
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/password/reset/init/:
    post:
      operationId: user_password_reset_init_create
      tags:
      - user
      security:
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: A simple ViewSet for viewing and editing Users.
      tags:
      - users
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: A simple ViewSet for viewing and editing Users.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: A simple ViewSet for viewing and editing Users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/webhooks/:
    get:
      operationId: webhooks_list
      description: API endpoint that allows alerts to be viewed or edited.
      tags:
      - webhooks
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookEndpoint'
          description: ''
    post:
      operationId: webhooks_create
      description: API endpoint that allows alerts to be viewed or edited.
      tags:
      - webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEndpoint'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebhookEndpoint'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebhookEndpoint'
        required: true
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
          description: ''
  /api/webhooks/{webhook_endpoint_id}/:
    get:
      operationId: webhooks_retrieve
      description: API endpoint that allows alerts to be viewed or edited.
      parameters:
      - in: path
        name: webhook_endpoint_id
        schema:
          type: string
        required: true
      tags:
      - webhooks
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
          description: ''
    patch:
      operationId: webhooks_partial_update
      description: API endpoint that allows alerts to be viewed or edited.
      parameters:
      - in: path
        name: webhook_endpoint_id
        schema:
          type: string
        required: true
      tags:
      - webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWebhookEndpoint'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWebhookEndpoint'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWebhookEndpoint'
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
          description: ''
    delete:
      operationId: webhooks_destroy
      description: API endpoint that allows alerts to be viewed or edited.
      parameters:
      - in: path
        name: webhook_endpoint_id
        schema:
          type: string
        required: true
      tags:
      - webhooks
      security:
      - knoxTokenAuth: []
      - OrganizationApiKeyAuth: []
        TokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    APIKeyCreateSuccess:
      type: object
      properties:
        api_key:
          type: string
      required:
      - api_key
    Action:
      type: object
      description: DRF serializer for :class:`~activity.models.Action`.
      properties:
        id:
          type: integer
          readOnly: true
        actor:
          type: string
          readOnly: true
        verb:
          type: string
          maxLength: 255
        action_object:
          type: string
          readOnly: true
        target:
          type: string
          readOnly: true
        public:
          type: boolean
        description:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
      required:
      - action_object
      - actor
      - id
      - target
      - verb
    AllSubstitutionResults:
      type: object
      properties:
        substitution_results:
          type: array
          items:
            $ref: '#/components/schemas/SingleSubstitution'
        original_plans_revenue:
          type: number
          format: double
        new_plans_revenue:
          type: number
          format: double
        pct_revenue_change:
          type: number
          format: double
          nullable: true
    BacktestCreate:
      type: object
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        substitutions:
          type: array
          items:
            $ref: '#/components/schemas/BacktestSubstitutionMulti'
          writeOnly: true
        kpis:
          type: array
          items:
            $ref: '#/components/schemas/KpisEnum'
        backtest_name:
          type: string
          maxLength: 100
      required:
      - backtest_name
      - end_date
      - kpis
      - start_date
      - substitutions
    BacktestDetail:
      type: object
      properties:
        backtest_name:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        time_created:
          type: string
          format: date-time
        kpis:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/BacktestStatusEnum'
        backtest_id:
          type: string
          maxLength: 100
        backtest_substitutions:
          type: array
          items:
            $ref: '#/components/schemas/BacktestSubstitution'
        backtest_results:
          $ref: '#/components/schemas/AllSubstitutionResults'
      required:
      - backtest_name
      - backtest_results
      - backtest_substitutions
      - end_date
      - start_date
    BacktestStatusEnum:
      enum:
      - running
      - completed
      - failed
      type: string
    BacktestSubstitution:
      type: object
      properties:
        new_plan:
          $ref: '#/components/schemas/PlanVersion'
        original_plan:
          $ref: '#/components/schemas/PlanVersion'
      required:
      - new_plan
      - original_plan
    BacktestSubstitutionMulti:
      type: object
      properties:
        new_plan:
          type: string
        original_plans:
          type: array
          items:
            type: string
      required:
      - new_plan
      - original_plans
    BacktestSummary:
      type: object
      properties:
        backtest_name:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        time_created:
          type: string
          format: date-time
        kpis:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/BacktestStatusEnum'
        backtest_id:
          type: string
          maxLength: 100
      required:
      - backtest_name
      - end_date
      - start_date
    BatchEvent:
      type: object
      properties:
        batch:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      required:
      - batch
    BatchRoundingTypeEnum:
      enum:
      - round_up
      - round_down
      - round_nearest
      - no_rounding
      type: string
    BehaviorOnExistingEnum:
      enum:
      - merge
      - ignore
      - overwrite
      type: string
    BlankEnum:
      enum:
      - ''
    CategoricalFilter:
      type: object
      properties:
        property_name:
          type: string
          maxLength: 100
        operator:
          $ref: '#/components/schemas/CategoricalFilterOperatorEnum'
        comparison_value:
          type: array
          items:
            type: string
      required:
      - comparison_value
      - operator
      - property_name
    CategoricalFilterOperatorEnum:
      enum:
      - isin
      - isnotin
      type: string
    CostAnalysis:
      type: object
      properties:
        per_day:
          type: array
          items:
            $ref: '#/components/schemas/SingleDayCostAnalysis'
        total_cost:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        total_revenue:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        margin:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - margin
      - per_day
      - total_cost
      - total_revenue
    Customer:
      type: object
      properties:
        customer_name:
          type: string
          nullable: true
          maxLength: 100
        customer_id:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        payment_provider:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentProvidersEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        payment_provider_id:
          type: string
          writeOnly: true
          nullable: true
        properties:
          type: object
          additionalProperties: {}
          nullable: true
        integrations:
          type: object
          additionalProperties: {}
          nullable: true
        default_currency_code:
          type: string
          writeOnly: true
      required:
      - customer_id
      - email
    CustomerBalanceAdjustment:
      type: object
      properties:
        adjustment_id:
          type: string
          maxLength: 100
        customer_id:
          type: string
        amount:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        pricing_unit_code:
          type: string
          writeOnly: true
        pricing_unit:
          allOf:
          - $ref: '#/components/schemas/PricingUnit'
          readOnly: true
        description:
          type: string
          nullable: true
        effective_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/CustomerBalanceAdjustmentStatusEnum'
        parent_adjustment_id:
          type: string
          readOnly: true
      required:
      - amount
      - customer_id
      - parent_adjustment_id
      - pricing_unit
      - pricing_unit_code
    CustomerBalanceAdjustmentStatusEnum:
      enum:
      - active
      - inactive
      type: string
    CustomerBatchCreateFailure:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/TrackEventFailureEnum'
        failed_customers:
          type: object
          additionalProperties: {}
      required:
      - failed_customers
      - success
    CustomerBatchCreateRequest:
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        behavior_on_existing:
          $ref: '#/components/schemas/BehaviorOnExistingEnum'
      required:
      - behavior_on_existing
      - customers
    CustomerBatchCreateSuccess:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/TrackEventSuccessEnum'
        failed_customers:
          type: object
          additionalProperties: {}
      required:
      - success
    CustomerDetail:
      type: object
      properties:
        customer_id:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          nullable: true
          maxLength: 100
        customer_name:
          type: string
          nullable: true
          maxLength: 100
        balance_adjustments:
          type: array
          items:
            $ref: '#/components/schemas/CustomerBalanceAdjustment'
          readOnly: true
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
          readOnly: true
        total_amount_due:
          type: number
          format: double
          readOnly: true
        next_amount_due:
          type: number
          format: double
          readOnly: true
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionCustomerDetail'
          readOnly: true
        integrations:
          type: object
          additionalProperties: {}
          nullable: true
        default_currency:
          $ref: '#/components/schemas/PricingUnit'
      required:
      - balance_adjustments
      - default_currency
      - invoices
      - next_amount_due
      - subscriptions
      - total_amount_due
    CustomerNameAndID:
      type: object
      properties:
        customer_name:
          type: string
          nullable: true
          maxLength: 100
        customer_id:
          type: string
          maxLength: 50
    CustomerSummary:
      type: object
      properties:
        customer_name:
          type: string
          nullable: true
          maxLength: 100
        customer_id:
          type: string
          maxLength: 50
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionCustomerSummary'
          readOnly: true
      required:
      - subscriptions
    CustomerUpdate:
      type: object
      properties:
        default_currency_code:
          type: string
      required:
      - default_currency_code
    CustomerWithRevenue:
      type: object
      properties:
        customer_id:
          type: string
          maxLength: 50
        total_amount_due:
          type: number
          format: double
          readOnly: true
        next_amount_due:
          type: number
          format: double
          readOnly: true
      required:
      - next_amount_due
      - total_amount_due
    DayMetricUsage:
      type: object
      properties:
        date:
          type: string
          format: date
        customer_usages:
          type: object
          additionalProperties:
            type: number
            format: double
            maximum: 10000000000
            minimum: -10000000000
            exclusiveMaximum: true
            exclusiveMinimum: true
      required:
      - customer_usages
      - date
    DemoRegistration:
      type: object
      properties:
        register:
          $ref: '#/components/schemas/DemoRegistrationDetail'
      required:
      - register
    DemoRegistrationDetail:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        username:
          type: string
      required:
      - email
      - password
      - username
    DemoRegistrationFailure:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    DemoRegistrationSuccess:
      type: object
      properties:
        detail:
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - detail
      - token
      - user
    DraftInvoice:
      type: object
      properties:
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
        cost_due:
          type: number
          format: double
          maximum: 100000000
          minimum: -100000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          readOnly: true
        payment_status:
          $ref: '#/components/schemas/DraftInvoicePaymentStatusEnum'
        cost_due_currency:
          type: string
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
        org_connected_to_cust_payment_provider:
          type: boolean
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
      required:
      - cost_due
      - customer
      - line_items
      - payment_status
      - pricing_unit
      - subscription
    DraftInvoicePaymentStatusEnum:
      enum:
      - draft
      type: string
    Event:
      type: object
      properties:
        event_name:
          type: string
          maxLength: 200
        properties:
          type: object
          additionalProperties: {}
          nullable: true
        time_created:
          type: string
          format: date-time
        idempotency_id:
          type: string
          maxLength: 255
        customer_id:
          type: string
          writeOnly: true
        customer:
          type: string
          readOnly: true
      required:
      - customer
      - customer_id
      - event_name
      - idempotency_id
      - time_created
    EventTypeEnum:
      enum:
      - delta
      - total
      type: string
    ExperimentalToActiveFailure:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status956Enum'
        detail:
          type: string
      required:
      - detail
      - status
    ExperimentalToActiveRequest:
      type: object
      properties:
        version_id:
          type: string
      required:
      - version_id
    ExperimentalToActiveSuccess:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SuccessStatusEnum'
        detail:
          type: string
      required:
      - detail
      - status
    ExternalPlanLink:
      type: object
      properties:
        plan_id:
          type: string
          writeOnly: true
        source:
          $ref: '#/components/schemas/PaymentProvidersEnum'
        external_plan_id:
          type: string
          maxLength: 100
      required:
      - external_plan_id
      - plan_id
      - source
    Feature:
      type: object
      properties:
        feature_name:
          type: string
          maxLength: 200
        feature_description:
          type: string
          nullable: true
          maxLength: 200
      required:
      - feature_name
    FeatureUsage:
      type: object
      properties:
        feature_name:
          type: string
        subscription_id:
          type: string
      required:
      - feature_name
      - subscription_id
    FlatFeeBillingTypeEnum:
      enum:
      - in_arrears
      - in_advance
      type: string
    GetCustomerAccessFailure:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status956Enum'
        detail:
          type: string
      required:
      - detail
      - status
    GetCustomerAccessSuccess:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/MetricUsage'
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureUsage'
    ImportCustomerFailure:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status956Enum'
        detail:
          type: string
      required:
      - detail
      - status
    ImportCustomerSuccess:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SuccessStatusEnum'
        detail:
          type: string
      required:
      - detail
      - status
    ImportCustomersRequest:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/PaymentProvidersEnum'
      required:
      - source
    ImportPaymentObjectFailure:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status956Enum'
        detail:
          type: string
      required:
      - detail
      - status
    ImportPaymentObjectSuccess:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SuccessStatusEnum'
        detail:
          type: string
      required:
      - detail
      - status
    ImportPaymentObjectsRequest:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/PaymentProvidersEnum'
      required:
      - source
    InitialExternalPlanLink:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/PaymentProvidersEnum'
        external_plan_id:
          type: string
          maxLength: 100
      required:
      - external_plan_id
      - source
    InitialPlanVersion:
      type: object
      properties:
        created_by:
          type: string
          readOnly: true
        replace_with:
          type: integer
          nullable: true
          readOnly: true
        components:
          type: array
          items:
            $ref: '#/components/schemas/PlanComponent'
          nullable: true
        usage_billing_frequency:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/UsageBillingFrequencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        price_adjustment:
          $ref: '#/components/schemas/PriceAdjustment'
        description:
          type: string
          nullable: true
          maxLength: 200
        active_subscriptions:
          type: integer
          readOnly: true
        flat_fee_billing_type:
          $ref: '#/components/schemas/FlatFeeBillingTypeEnum'
        transition_to_plan_id:
          type: string
          writeOnly: true
        transition_to:
          type: string
          nullable: true
          readOnly: true
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          nullable: true
        flat_rate:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        status:
          allOf:
          - $ref: '#/components/schemas/PlanVersionStatusEnum'
          readOnly: true
        version:
          type: integer
          readOnly: true
        version_id:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - active_subscriptions
      - created_by
      - created_on
      - flat_fee_billing_type
      - replace_with
      - status
      - transition_to
      - version
      - version_id
    Invoice:
      type: object
      properties:
        invoice_id:
          type: string
          maxLength: 100
        cost_due:
          type: number
          format: double
          maximum: 100000000
          minimum: -100000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        pricing_unit:
          $ref: '#/components/schemas/PricingUnit'
        issue_date:
          type: string
          format: date-time
        payment_status:
          $ref: '#/components/schemas/InvoiceStatusEnum'
        cust_connected_to_payment_provider:
          type: boolean
        org_connected_to_cust_payment_provider:
          type: boolean
        external_payment_obj_id:
          type: string
          nullable: true
          maxLength: 200
        external_payment_obj_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentProvidersEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          readOnly: true
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
      required:
      - cost_due
      - customer
      - line_items
      - payment_status
      - pricing_unit
      - subscription
    InvoiceLineItem:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        quantity:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        subtotal:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        billing_type:
          $ref: '#/components/schemas/FlatFeeBillingTypeEnum'
        plan_version_id:
          type: string
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - billing_type
      - name
      - plan_version_id
    InvoiceStatusEnum:
      enum:
      - draft
      - voided
      - paid
      - unpaid
      type: string
    InvoiceUpdate:
      type: object
      properties:
        payment_status:
          $ref: '#/components/schemas/InvoiceUpdatePaymentStatusEnum'
      required:
      - payment_status
    InvoiceUpdatePaymentStatusEnum:
      enum:
      - paid
      - unpaid
      type: string
    KpisEnum:
      enum:
      - total_revenue
      type: string
    LoginFailure:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    LoginSuccess:
      type: object
      properties:
        detail:
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - detail
      - token
      - user
    MakeActiveTypeEnum:
      enum:
      - replace_immediately
      - replace_on_active_version_renewal
      - grandfather_active
      type: string
    Metric:
      type: object
      properties:
        metric_id:
          type: string
          readOnly: true
        event_name:
          type: string
          maxLength: 200
        property_name:
          type: string
          nullable: true
          maxLength: 200
        usage_aggregation_type:
          $ref: '#/components/schemas/MetricAggregationEnum'
        billable_aggregation_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MetricAggregationEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        granularity:
          $ref: '#/components/schemas/MetricGranularityEnum'
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        metric_type:
          $ref: '#/components/schemas/MetricTypeEnum'
        billable_metric_name:
          type: string
          nullable: true
          maxLength: 200
        numeric_filters:
          type: array
          items:
            $ref: '#/components/schemas/NumericFilter'
          nullable: true
        categorical_filters:
          type: array
          items:
            $ref: '#/components/schemas/CategoricalFilter'
          nullable: true
        properties:
          type: object
          additionalProperties: {}
          nullable: true
        is_cost_metric:
          type: boolean
      required:
      - event_name
      - metric_id
      - metric_type
      - usage_aggregation_type
    MetricAggregationEnum:
      enum:
      - count
      - sum
      - max
      - unique
      - latest
      - average
      type: string
    MetricGranularityEnum:
      enum:
      - seconds
      - minutes
      - hours
      - days
      - months
      - quarters
      - years
      - total
      type: string
    MetricRevenue:
      type: object
      properties:
        metric_name:
          type: string
        original_plan_revenue:
          type: number
          format: double
        new_plan_revenue:
          type: number
          format: double
      required:
      - metric_name
      - new_plan_revenue
      - original_plan_revenue
    MetricTypeEnum:
      enum:
      - counter
      - stateful
      - rate
      type: string
    MetricUpdate:
      type: object
      properties:
        billable_metric_name:
          type: string
          nullable: true
          maxLength: 200
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
    MetricUsage:
      type: object
      properties:
        separate_by_properties:
          type: object
          additionalProperties:
            type: string
        event_name:
          type: string
        metric_name:
          type: string
        metric_usage:
          type: number
          format: double
        metric_free_limit:
          type: number
          format: double
        metric_total_limit:
          type: number
          format: double
        subscription_id:
          type: string
      required:
      - event_name
      - metric_free_limit
      - metric_name
      - metric_total_limit
      - metric_usage
      - separate_by_properties
      - subscription_id
    NullEnum:
      enum:
      - null
    NumericFilter:
      type: object
      properties:
        property_name:
          type: string
          maxLength: 100
        operator:
          $ref: '#/components/schemas/NumericFilterOperatorEnum'
        comparison_value:
          type: number
          format: double
      required:
      - comparison_value
      - operator
      - property_name
    NumericFilterOperatorEnum:
      enum:
      - gte
      - gt
      - eq
      - lt
      - lte
      type: string
    Organization:
      type: object
      properties:
        organization_id:
          type: string
          maxLength: 100
        company_name:
          type: string
          maxLength: 100
        payment_plan:
          $ref: '#/components/schemas/PaymentPlanEnum'
        payment_provider_ids:
          type: object
          additionalProperties: {}
          nullable: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUser'
          readOnly: true
        default_currency:
          $ref: '#/components/schemas/PricingUnit'
      required:
      - company_name
      - default_currency
      - users
    OrganizationSetting:
      type: object
      properties:
        setting_id:
          type: string
          readOnly: true
        setting_name:
          type: string
          readOnly: true
        setting_value:
          type: string
          maxLength: 100
        setting_group:
          type: string
          readOnly: true
          nullable: true
      required:
      - setting_group
      - setting_id
      - setting_name
      - setting_value
    OrganizationUpdate:
      type: object
      properties:
        default_currency_code:
          type: string
      required:
      - default_currency_code
    OrganizationUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        role:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrganizationUserStatus'
          default: Active
      required:
      - email
      - role
      - username
    OrganizationUserStatus:
      enum:
      - Active
      - Invited
      type: string
    PaginatedActionList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    PaginatedEventList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PatchedCustomerUpdate:
      type: object
      properties:
        default_currency_code:
          type: string
    PatchedInvoiceUpdate:
      type: object
      properties:
        payment_status:
          $ref: '#/components/schemas/InvoiceUpdatePaymentStatusEnum'
    PatchedMetricUpdate:
      type: object
      properties:
        billable_metric_name:
          type: string
          nullable: true
          maxLength: 200
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
    PatchedOrganizationSetting:
      type: object
      properties:
        setting_id:
          type: string
          readOnly: true
        setting_name:
          type: string
          readOnly: true
        setting_value:
          type: string
          maxLength: 100
        setting_group:
          type: string
          readOnly: true
          nullable: true
    PatchedOrganizationUpdate:
      type: object
      properties:
        default_currency_code:
          type: string
    PatchedPlanUpdate:
      type: object
      properties:
        plan_name:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
    PatchedPlanVersionUpdate:
      type: object
      properties:
        description:
          type: string
          nullable: true
          maxLength: 200
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
        make_active_type:
          $ref: '#/components/schemas/MakeActiveTypeEnum'
        replace_immediately_type:
          $ref: '#/components/schemas/ReplaceImmediatelyTypeEnum'
        transition_to_plan_id:
          type: string
          writeOnly: true
        transition_to_plan_version_id:
          type: string
          writeOnly: true
    PatchedSubscriptionUpdate:
      type: object
      properties:
        plan_id:
          type: string
          writeOnly: true
        status:
          $ref: '#/components/schemas/SubscriptionUpdateStatusEnum'
        auto_renew:
          type: boolean
        replace_immediately_type:
          allOf:
          - $ref: '#/components/schemas/ReplaceImmediatelyTypeEnum'
          writeOnly: true
    PatchedWebhookEndpoint:
      type: object
      properties:
        webhook_endpoint_id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        webhook_url:
          type: string
          maxLength: 300
        webhook_secret:
          type: string
          readOnly: true
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/WebhookTrigger'
          readOnly: true
        triggers_in:
          type: array
          items:
            $ref: '#/components/schemas/TriggersInEnum'
          writeOnly: true
    PaymentPlanEnum:
      enum:
      - self_hosted_free
      - cloud
      - self_hosted_enterprise
      type: string
    PaymentProviderPostData:
      type: object
      properties:
        payment_processor:
          $ref: '#/components/schemas/PaymentProvidersEnum'
        data:
          type: object
          additionalProperties: {}
      required:
      - data
      - payment_processor
    PaymentProviderPostRequest:
      type: object
      properties:
        pp_info:
          $ref: '#/components/schemas/PaymentProviderPostData'
      required:
      - pp_info
    PaymentProviderPostResponse:
      type: object
      properties:
        payment_processor:
          $ref: '#/components/schemas/PaymentProvidersEnum'
        success:
          type: boolean
        details:
          type: string
      required:
      - details
      - payment_processor
      - success
    PaymentProvidersEnum:
      enum:
      - stripe
      type: string
    PeriodMetricRevenueResponse:
      type: object
      properties:
        total_revenue_period_1:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        total_revenue_period_2:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        earned_revenue_period_1:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        earned_revenue_period_2:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - earned_revenue_period_1
      - earned_revenue_period_2
      - total_revenue_period_1
      - total_revenue_period_2
    PeriodMetricUsageResponse:
      type: object
      properties:
        metrics:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PeriodSingleMetricUsage'
      required:
      - metrics
    PeriodSingleMetricUsage:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DayMetricUsage'
        total_usage:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - data
      - total_usage
    PeriodSubscriptionsResponse:
      type: object
      properties:
        period_1_total_subscriptions:
          type: integer
        period_1_new_subscriptions:
          type: integer
        period_2_total_subscriptions:
          type: integer
        period_2_new_subscriptions:
          type: integer
      required:
      - period_1_new_subscriptions
      - period_1_total_subscriptions
      - period_2_new_subscriptions
      - period_2_total_subscriptions
    Plan:
      type: object
      properties:
        plan_name:
          type: string
          maxLength: 100
        plan_duration:
          $ref: '#/components/schemas/PlanDurationEnum'
        product_id:
          type: string
          nullable: true
        plan_id:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/PlanStatusEnum'
        initial_external_links:
          type: array
          items:
            $ref: '#/components/schemas/InitialExternalPlanLink'
          writeOnly: true
        initial_version:
          allOf:
          - $ref: '#/components/schemas/InitialPlanVersion'
          writeOnly: true
        parent_plan_id:
          type: string
          writeOnly: true
        target_customer_id:
          type: string
          writeOnly: true
        external_links:
          type: array
          items:
            $ref: '#/components/schemas/ExternalPlanLink'
          readOnly: true
        parent_plan:
          allOf:
          - $ref: '#/components/schemas/PlanNameAndID'
          readOnly: true
        target_customer:
          allOf:
          - $ref: '#/components/schemas/CustomerNameAndID'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        display_version:
          allOf:
          - $ref: '#/components/schemas/PlanVersion'
          readOnly: true
        num_versions:
          type: integer
          readOnly: true
        active_subscriptions:
          type: integer
          readOnly: true
      required:
      - active_subscriptions
      - created_by
      - created_on
      - display_version
      - external_links
      - initial_version
      - num_versions
      - parent_plan
      - plan_duration
      - plan_name
      - target_customer
    PlanComponent:
      type: object
      properties:
        billable_metric_name:
          type: string
          writeOnly: true
        billable_metric:
          allOf:
          - $ref: '#/components/schemas/Metric'
          readOnly: true
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/PriceTier'
        separate_by:
          type: array
          items:
            type: string
        proration_granularity:
          allOf:
          - $ref: '#/components/schemas/MetricGranularityEnum'
          default: total
      required:
      - billable_metric
      - billable_metric_name
      - tiers
    PlanDetail:
      type: object
      properties:
        created_by:
          type: string
          readOnly: true
        plan_id:
          type: string
          maxLength: 100
        num_versions:
          type: integer
          readOnly: true
        external_links:
          type: array
          items:
            $ref: '#/components/schemas/ExternalPlanLink'
          readOnly: true
        status:
          $ref: '#/components/schemas/PlanStatusEnum'
        initial_external_links:
          type: array
          items:
            $ref: '#/components/schemas/InitialExternalPlanLink'
          writeOnly: true
        versions:
          type: array
          items:
            $ref: '#/components/schemas/PlanVersion'
          readOnly: true
        plan_name:
          type: string
          maxLength: 100
        active_subscriptions:
          type: integer
          readOnly: true
        plan_duration:
          $ref: '#/components/schemas/PlanDurationEnum'
        product_id:
          type: string
          nullable: true
        target_customer:
          allOf:
          - $ref: '#/components/schemas/CustomerNameAndID'
          readOnly: true
        status:
          $ref: '#/components/schemas/PlanStatusEnum'
        created_on:
          type: string
          format: date-time
          readOnly: true
        parent_plan:
          allOf:
          - $ref: '#/components/schemas/PlanNameAndID'
          readOnly: true
      required:
      - active_subscriptions
      - created_by
      - created_on
      - external_links
      - num_versions
      - parent_plan
      - plan_duration
      - plan_name
      - target_customer
      - versions
    PlanDurationEnum:
      enum:
      - monthly
      - quarterly
      - yearly
      type: string
    PlanNameAndID:
      type: object
      properties:
        plan_name:
          type: string
          maxLength: 100
        plan_id:
          type: string
          maxLength: 100
      required:
      - plan_name
    PlanRepresentation:
      type: object
      properties:
        plan_name:
          type: string
        plan_id:
          type: string
        plan_revenue:
          type: number
          format: double
      required:
      - plan_id
      - plan_name
      - plan_revenue
    PlanStatusEnum:
      enum:
      - active
      - archived
      - experimental
      type: string
    PlanUpdate:
      type: object
      properties:
        plan_name:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
      required:
      - plan_name
      - status
    PlanVersion:
      type: object
      properties:
        description:
          type: string
          nullable: true
          maxLength: 200
        plan_id:
          type: string
        flat_fee_billing_type:
          $ref: '#/components/schemas/FlatFeeBillingTypeEnum'
        flat_rate:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        components:
          type: array
          items:
            $ref: '#/components/schemas/PlanComponent'
          nullable: true
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          nullable: true
        price_adjustment:
          $ref: '#/components/schemas/PriceAdjustment'
        usage_billing_frequency:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/UsageBillingFrequencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        make_active:
          type: boolean
          writeOnly: true
        make_active_type:
          allOf:
          - $ref: '#/components/schemas/MakeActiveTypeEnum'
          writeOnly: true
        replace_immediately_type:
          allOf:
          - $ref: '#/components/schemas/ReplaceImmediatelyTypeEnum'
          writeOnly: true
        transition_to_plan_id:
          type: string
          writeOnly: true
        version:
          type: integer
          readOnly: true
        version_id:
          type: string
          readOnly: true
        active_subscriptions:
          type: integer
          readOnly: true
        created_by:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/PlanVersionStatusEnum'
          readOnly: true
        replace_with:
          type: integer
          nullable: true
          readOnly: true
        transition_to:
          type: string
          nullable: true
          readOnly: true
      required:
      - active_subscriptions
      - created_by
      - created_on
      - flat_fee_billing_type
      - make_active
      - replace_with
      - status
      - transition_to
      - version
      - version_id
    PlanVersionStatusEnum:
      enum:
      - active
      - retiring
      - grandfathered
      - archived
      - inactive
      type: string
    PlanVersionUpdate:
      type: object
      properties:
        description:
          type: string
          nullable: true
          maxLength: 200
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
        make_active_type:
          $ref: '#/components/schemas/MakeActiveTypeEnum'
        replace_immediately_type:
          $ref: '#/components/schemas/ReplaceImmediatelyTypeEnum'
        transition_to_plan_id:
          type: string
          writeOnly: true
        transition_to_plan_version_id:
          type: string
          writeOnly: true
    PlansByNumCustomers:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SinglePlanNumCustomers'
        status:
          $ref: '#/components/schemas/SuccessStatusEnum'
      required:
      - results
      - status
    PriceAdjustment:
      type: object
      properties:
        price_adjustment_name:
          type: string
          default: ''
        price_adjustment_description:
          type: string
          nullable: true
          maxLength: 200
        price_adjustment_type:
          $ref: '#/components/schemas/PriceAdjustmentTypeEnum'
        price_adjustment_amount:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - price_adjustment_amount
      - price_adjustment_type
    PriceAdjustmentTypeEnum:
      enum:
      - percentage
      - fixed
      - price_override
      type: string
    PriceTier:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeEnum'
        range_start:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        range_end:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        cost_per_batch:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        metric_units_per_batch:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        batch_rounding_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/BatchRoundingTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - range_start
      - type
    PricingUnit:
      type: object
      properties:
        code:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 100
        symbol:
          type: string
          maxLength: 10
      required:
      - code
      - name
      - symbol
    Product:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        product_id:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/ProductStatusEnum'
      required:
      - name
      - status
    ProductStatusEnum:
      enum:
      - active
      - archived
      type: string
    Registration:
      type: object
      properties:
        register:
          $ref: '#/components/schemas/RegistrationDetail'
      required:
      - register
    RegistrationDetail:
      type: object
      properties:
        company_name:
          type: string
        industry:
          type: string
        email:
          type: string
        password:
          type: string
        username:
          type: string
      required:
      - company_name
      - email
      - industry
      - password
      - username
    RegistrationFailure:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    RegistrationSuccess:
      type: object
      properties:
        detail:
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - detail
      - token
      - user
    ReplaceImmediatelyTypeEnum:
      enum:
      - end_current_subscription_and_bill
      - end_current_subscription_dont_bill
      - change_subscription_plan
      type: string
    RevenueDate:
      type: object
      properties:
        date:
          type: string
          format: date
        original_plan_revenue:
          type: number
          format: double
        new_plan_revenue:
          type: number
          format: double
      required:
      - date
      - new_plan_revenue
      - original_plan_revenue
    SingleCustomerValue:
      type: object
      properties:
        customer_id:
          type: string
        customer_name:
          type: string
        value:
          type: number
          format: double
      required:
      - customer_id
      - customer_name
      - value
    SingleDayCostAnalysis:
      type: object
      properties:
        date:
          type: string
          format: date
        cost_data:
          type: array
          items:
            $ref: '#/components/schemas/SingleMetricCost'
        revenue:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - cost_data
      - date
      - revenue
    SingleMetricCost:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/Metric'
        cost:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - cost
      - metric
    SinglePaymentProvider:
      type: object
      properties:
        payment_provider_name:
          type: string
        connected:
          type: boolean
        redirect_url:
          type: string
          format: uri
      required:
      - connected
      - payment_provider_name
      - redirect_url
    SinglePlanNumCustomers:
      type: object
      properties:
        plan_name:
          type: string
        num_customers:
          type: integer
        percent_total:
          type: number
          format: double
      required:
      - num_customers
      - percent_total
      - plan_name
    SingleSubstitution:
      type: object
      properties:
        substitution_name:
          type: string
        original_plan:
          $ref: '#/components/schemas/PlanRepresentation'
        new_plan:
          $ref: '#/components/schemas/PlanRepresentation'
        pct_revenue_change:
          type: number
          format: double
          nullable: true
        results:
          $ref: '#/components/schemas/SingleSubstitutionResults'
      required:
      - new_plan
      - original_plan
      - pct_revenue_change
      - results
      - substitution_name
    SingleSubstitutionResults:
      type: object
      properties:
        cumulative_revenue:
          type: array
          items:
            $ref: '#/components/schemas/RevenueDate'
        revenue_by_metric:
          type: array
          items:
            $ref: '#/components/schemas/MetricRevenue'
        top_customers:
          $ref: '#/components/schemas/TopCustomers'
      required:
      - cumulative_revenue
      - revenue_by_metric
      - top_customers
    Status956Enum:
      enum:
      - error
      type: string
    Subscription:
      type: object
      properties:
        customer_id:
          type: string
          writeOnly: true
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
        plan_id:
          type: string
          writeOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        scheduled_end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/SubscriptionStatusEnum'
        auto_renew:
          type: boolean
        is_new:
          type: boolean
        subscription_id:
          type: string
      required:
      - customer
      - customer_id
      - plan_id
      - scheduled_end_date
      - start_date
    SubscriptionCustomerDetail:
      type: object
      properties:
        billing_plan_name:
          type: string
        plan_version:
          type: string
        end_date:
          type: string
          format: date-time
        auto_renew:
          type: boolean
        subscription_id:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/SubscriptionStatusEnum'
      required:
      - billing_plan_name
      - end_date
      - plan_version
      - start_date
    SubscriptionCustomerSummary:
      type: object
      properties:
        billing_plan_name:
          type: string
        plan_version:
          type: string
        end_date:
          type: string
          format: date-time
        auto_renew:
          type: boolean
      required:
      - billing_plan_name
      - end_date
      - plan_version
    SubscriptionDetail:
      type: object
      properties:
        start_date:
          type: string
          writeOnly: true
        end_date:
          type: string
          format: date-time
        billing_plan:
          allOf:
          - $ref: '#/components/schemas/PlanVersion'
          readOnly: true
        auto_renew:
          type: boolean
        status:
          $ref: '#/components/schemas/SubscriptionStatusEnum'
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
        start_date:
          type: string
          format: date-time
        is_new:
          type: boolean
        customer_id:
          type: string
          writeOnly: true
        subscription_id:
          type: string
        scheduled_end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - billing_plan
      - customer
      - customer_id
      - plan_id
      - scheduled_end_date
      - start_date
    SubscriptionStatusEnum:
      enum:
      - active
      - ended
      - not_started
      type: string
    SubscriptionUpdate:
      type: object
      properties:
        plan_id:
          type: string
          writeOnly: true
        status:
          $ref: '#/components/schemas/SubscriptionUpdateStatusEnum'
        auto_renew:
          type: boolean
        replace_immediately_type:
          allOf:
          - $ref: '#/components/schemas/ReplaceImmediatelyTypeEnum'
          writeOnly: true
      required:
      - replace_immediately_type
    SubscriptionUpdateStatusEnum:
      enum:
      - ended
      type: string
    SuccessStatusEnum:
      enum:
      - success
      type: string
    TopCustomers:
      type: object
      properties:
        original_plan_revenue:
          type: array
          items:
            $ref: '#/components/schemas/SingleCustomerValue'
        new_plan_revenue:
          type: array
          items:
            $ref: '#/components/schemas/SingleCustomerValue'
        biggest_pct_increase:
          type: array
          items:
            $ref: '#/components/schemas/SingleCustomerValue'
        biggest_pct_decrease:
          type: array
          items:
            $ref: '#/components/schemas/SingleCustomerValue'
      required:
      - biggest_pct_decrease
      - biggest_pct_increase
      - new_plan_revenue
      - original_plan_revenue
    TrackEventFailure:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/TrackEventFailureEnum'
        failed_events:
          type: object
          additionalProperties: {}
      required:
      - failed_events
      - success
    TrackEventFailureEnum:
      enum:
      - none
      type: string
    TrackEventSuccess:
      type: object
      properties:
        success:
          $ref: '#/components/schemas/TrackEventSuccessEnum'
        failed_events:
          type: object
          additionalProperties: {}
      required:
      - success
    TrackEventSuccessEnum:
      enum:
      - all
      - some
      type: string
    TransferSubscriptionsFailure:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status956Enum'
        detail:
          type: string
      required:
      - detail
      - status
    TransferSubscriptionsRequest:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/PaymentProvidersEnum'
        end_now:
          type: boolean
      required:
      - end_now
      - source
    TransferSubscriptionsSuccess:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SuccessStatusEnum'
        detail:
          type: string
      required:
      - detail
      - status
    TriggerNameEnum:
      enum:
      - invoice.created
      type: string
    TriggersInEnum:
      enum:
      - invoice.created
      type: string
    TypeEnum:
      enum:
      - flat
      - per_unit
      - free
      type: string
    UsageBillingFrequencyEnum:
      enum:
      - weekly
      - monthly
      - quarterly
      - end_of_period
      type: string
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        company_name:
          type: string
        organization_id:
          type: string
      required:
      - company_name
      - email
      - organization_id
      - username
    WebhookEndpoint:
      type: object
      properties:
        webhook_endpoint_id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        webhook_url:
          type: string
          maxLength: 300
        webhook_secret:
          type: string
          readOnly: true
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/WebhookTrigger'
          readOnly: true
        triggers_in:
          type: array
          items:
            $ref: '#/components/schemas/TriggersInEnum'
          writeOnly: true
      required:
      - triggers
      - triggers_in
      - webhook_endpoint_id
      - webhook_secret
      - webhook_url
    WebhookTrigger:
      type: object
      properties:
        trigger_name:
          $ref: '#/components/schemas/TriggerNameEnum'
      required:
      - trigger_name
  securitySchemes:
    OrganizationApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    basicAuth:
      type: http
      scheme: basic
    knoxTokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
