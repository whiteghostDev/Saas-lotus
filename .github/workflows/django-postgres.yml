# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Django/Postgres CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: lotus
          POSTGRES_PASSWORD: lotus
          SSLMODE: PREFER
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    environment: Development

    env:
      REDIS_HOST: localhost
      DJANGO_SETTINGS_MODULE: "lotus.settings"
      PYTHONPATH: "."
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: False

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install Dependencies
        env:
          PIPENV_NOSPIN: "true"
          WORKON_HOME: ~/.pipenv/virtualenvs
          PIPENV_CACHE_DIR: ~/.pipenv/pipcache
        run: pipenv install --deploy --dev

      - name: Migrate
        env:
          PIPENV_NOSPIN: "true"
          WORKON_HOME: ~/.pipenv/virtualenvs
        run: |
          pipenv run python manage.py migrate --noinput

      - name: Test Pytest
        env:
          PIPENV_NOSPIN: "true"
          WORKON_HOME: ~/.pipenv/virtualenvs
        run: |
          pipenv run pytest -k "not test_tasks"

      - name: Test Setup Tasks
        env:
          PIPENV_NOSPIN: "true"
          WORKON_HOME: ~/.pipenv/virtualenvs
        run: |
          pipenv run python manage.py setup_tasks

  codestyle:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: lotus
          POSTGRES_PASSWORD: lotus
          SSLMODE: PREFER
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    environment: Development

    env:
      REDIS_HOST: localhost
      DJANGO_SETTINGS_MODULE: "lotus.settings"
      PYTHONPATH: "."
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: False

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Install Dependencies
        env:
          PIPENV_NOSPIN: "true"
          WORKON_HOME: ~/.pipenv/virtualenvs
          PIPENV_CACHE_DIR: ~/.pipenv/pipcache
        run: pipenv install --deploy --dev

      - name: Migrate
        env:
          PIPENV_NOSPIN: "true"
          WORKON_HOME: ~/.pipenv/virtualenvs
        run: |
          pipenv run python manage.py migrate --noinput

      - name: Codestyle Check
        env:
          PIPENV_NOSPIN: "true"
          WORKON_HOME: ~/.pipenv/virtualenvs
        run: |
          pipenv run black --check .