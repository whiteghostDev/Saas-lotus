name: Cypress Tests

on:
  pull_request:
    branches: ["main"]

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        env:
          POSTGRES_USER: lotus
          POSTGRES_PASSWORD: lotus
          SSLMODE: PREFER
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    environment: Development

    env:
      REDIS_HOST: localhost
      DJANGO_SETTINGS_MODULE: "lotus.settings"
      PYTHONPATH: "."
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      STRIPE_LIVE_SECRET_KEY: ${{ secrets.STRIPE_LIVE_SECRET_KEY }}
      STRIPE_TEST_SECRET_KEY: ${{ secrets.STRIPE_TEST_SECRET_KEY }}
      DEBUG: False
      KAFKA_URL: "localhost:9092"
      PYTHONDONTWRITEBYTECODE: 1
      VITE_API_URL: "http://localhost:8000/"

    steps:
      - uses: actions/checkout@v3

      - name: start redpanda
        uses: redpanda-data/github-action@v0.1.3
        with:
          version: "latest"

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install pipenv
        run: |
          cd ./backend && python -m pip install --upgrade pipenv wheel && pipenv update

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install backend dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          cd ./backend && pipenv install --deploy --dev

      - name: Migrate
        run: |
          cd ./backend && pipenv run python manage.py migrate --noinput

      - name: Demo up
        run: |
          cd ./backend && pipenv run python manage.py demo_up

      - name: Run Django server
        run: |
          cd ./backend && pipenv run python manage.py runserver 0.0.0.0:8000 &

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          working-directory: ./frontend
          start: yarn run dev --port 3000 --host 127.0.0.1
          wait-on: "http://localhost:8000/api/healthcheck/, http://localhost:3000"
