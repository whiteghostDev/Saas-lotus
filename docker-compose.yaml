services:
  db:
    image: postgres:14-alpine
    restart: on-failure
    env_file:
      - ./env/.env

  lotus:
    container_name: lotus_django
    env_file:
      - ./env/.env
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./lotus:/lotus
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 manage.py migrate &&
             python3 manage.py collectstatic --no-input &&
             python3 manage.py initadmin &&
             python3 manage.py setup_tasks &&
             gunicorn lotus.wsgi:application -w 2 -b :8000 --reload
             "
    depends_on:
      - db

  redis:
    image: redis:7-alpine
    command: redis-server
    env_file:
      - ./env/.env

  celery:
    env_file:
      - ./env/.env
    build:
      context: .
    command: celery -A lotus worker -l info
    volumes:
      - ./lotus:/lotus
    depends_on:
      - db
      - redis
      - lotus

  celery-beat:
    env_file:
      - ./env/.env
    restart: on-failure
    build:
      context: .
    command: celery -A lotus beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./lotus:/lotus
    depends_on:
      - celery
      - redis
      - lotus
      - db
volumes:
  pgdata:
