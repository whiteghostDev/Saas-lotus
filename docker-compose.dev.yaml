services:
  db:
    image: postgres:14-alpine
    restart: on-failure
    ports:
      - 5432:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    env_file:
      - ./env/.env.dev

  backend:
    env_file:
      - ./env/.env.dev
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    ports:
      - 8000:8000
    volumes:
      - ./lotus:/lotus/lotus
      - ./metering_billing:/lotus/metering_billing
    command: >
      sh -c "python3 manage.py wait_for_db && \
              python3 manage.py migrate && \
              python3 manage.py initadmin && \
              python3 manage.py setup_tasks && \
              python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db

  frontend:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: development
    ports:
      - 3000:3000
    command: yarn run dev --host 0.0.0.0 --port 3000
    volumes:
      - ./src:/frontend/src:delegated
      - ./public:/frontend/public:delegated
      - /frontend/node_modules/
    stdin_open: true
    depends_on:
      - backend

  redis:
    image: redis:7-alpine
    command: redis-server
    env_file:
      - ./env/.env.dev

  celery:
    env_file:
      - ./env/.env.dev
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    command: celery -A lotus worker -l info
    depends_on:
      - redis
      - backend

  celery-beat:
    env_file:
      - ./env/.env.dev
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    command: celery -A lotus beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - celery
      - backend
      - redis

volumes:
  pgdata:
